resources:
  - repo: self

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md

pr: none

jobs:
  ##
  # Main Building pipeline.
  # Along with building and deploying application dist, executes tests and generates coverage report.
  # All envitonment variables should be defined in vsts UI.
  ##
  - job: Building_pipeline
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 10

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
      - task: NodeTool@0
        displayName: 'Use specific node version'
        inputs:
          versionSpec: '12.16.1'

      - script: |
          npm install -g npm@6.14.4
          npm run install:project
          npm install -g typescript
          npm install -g @angular/cli
          npm install -g firebase-tools
          npm install -g @compodoc/ngd-cli
          bash shell/set-env.sh $SOUNDCLOUD_CLIENT_ID $FIREBASE_API_KEY $FIREBASE_AUTH_DOMAIN $FIREBASE_DATABASE_URL $FIREBASE_PROJECT_ID $FIREBASE_STORAGE_BUCKET $FIREBASE_MESSAGING_SENDER_ID $FIREBASE_DEPLOY_TOKEN $PRIVILEGED_ACCESS_FIREBASE_UID $GOOGLE_APIS_BROWSER_KEY $GOOGLE_APIS_CLIENT_ID $MAILER_HOST $MAILER_PORT $MAILER_EMAIL $MAILER_CLIENT_ID $MAILER_CLIENT_SECRET $MAILER_REFRESH_TOKEN $MAILER_ACCESS_TOKEN $MAILER_RECIPIENT_EMAIL
          npm run build:prod
          firebase deploy --token $FIREBASE_DEPLOY_TOKEN
          rm ./.env ./functions/.env || true
        env:
          FIREBASE_DEPLOY_TOKEN: $(firebaseDeployToken)
          SOUNDCLOUD_CLIENT_ID: $(SOUNDCLOUD_CLIENT_ID)
          FIREBASE_API_KEY: $(FIREBASE_API_KEY)
          FIREBASE_AUTH_DOMAIN: $(FIREBASE_AUTH_DOMAIN)
          FIREBASE_DATABASE_URL: $(FIREBASE_DATABASE_URL)
          FIREBASE_PROJECT_ID: $(FIREBASE_PROJECT_ID)
          FIREBASE_STORAGE_BUCKET: $(FIREBASE_STORAGE_BUCKET)
          FIREBASE_MESSAGING_SENDER_ID: $(FIREBASE_MESSAGING_SENDER_ID)
          PRIVILEGED_ACCESS_FIREBASE_UID: $(PRIVILEGED_ACCESS_FIREBASE_UID)
          GOOGLE_APIS_BROWSER_KEY: $(GOOGLE_APIS_BROWSER_KEY)
          GOOGLE_APIS_CLIENT_ID: $(GOOGLE_APIS_CLIENT_ID)
          MAILER_HOST: $(MAILER_HOST)
          MAILER_PORT: $(MAILER_PORT)
          MAILER_EMAIL: $(MAILER_EMAIL)
          MAILER_CLIENT_ID: $(MAILER_CLIENT_ID)
          MAILER_CLIENT_SECRET: $(MAILER_CLIENT_SECRET)
          MAILER_REFRESH_TOKEN: $(MAILER_REFRESH_TOKEN)
          MAILER_ACCESS_TOKEN: $(MAILER_ACCESS_TOKEN)
          MAILER_RECIPIENT_EMAIL: $(MAILER_RECIPIENT_EMAIL)

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
          includeRootFolder: false

      - task: PublishBuildArtifacts@1
        displayName: 'Publish artifacts: drop'
